basePath: /
definitions:
  auth_internal_service_dto.LoginRequest:
    description: User login request
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: securepassword
        type: string
    type: object
  auth_internal_service_dto.LoginResponse:
    description: User login response
    properties:
      message:
        example: Login successful
        type: string
    type: object
  auth_internal_service_dto.RegisterRequest:
    description: User registration request
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: securepassword
        type: string
    type: object
  auth_internal_service_dto.RegisterResponse:
    description: User response token information
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1N...
        type: string
      refresh_token:
        example: def456
        type: string
    type: object
  auth_internal_service_dto.UpdatePassword:
    description: User update password request
    properties:
      email:
        example: user@example.com
        type: string
      new_password:
        example: newpassword
        type: string
      old_password:
        example: oldpassword
        type: string
    type: object
  gin.H:
    additionalProperties: {}
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
  description: This is the authentication service for user management. It provides
    endpoints for user registration, login, and password management.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Auth Service API
  version: "1.0"
paths:
  /auth/auths:
    get:
      description: Returns a list of all registered users
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/auth_internal_service_dto.RegisterRequest'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all users
      tags:
      - users
  /auth/forgot-password:
    patch:
      consumes:
      - application/json
      description: Updates the password for an existing user
      parameters:
      - description: Password update information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth_internal_service_dto.UpdatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update user password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access tokens
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth_internal_service_dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth_internal_service_dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: User login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account with the provided information
      parameters:
      - description: User registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth_internal_service_dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth_internal_service_dto.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Register a new user
      tags:
      - auth
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
